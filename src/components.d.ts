/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  FlowElement,
} from './global/ConversationalEditor/instanceDefinition/Elements/FlowElement';

export namespace Components {
  interface GxcfCollection {
    'collection': string[];
    'collectionHeader': string;
    'collectionHintDescription': string;
    'collectionHintId': string;
    'currentItemIndex': number;
    'currentItemValue': string;
  }
  interface GxcfConversationaldesigner {}
  interface GxcfDownarrow {
    'arrowid': string;
  }
  interface GxcfDropzone {
    'moveType': string;
    'objectReferenceId': string;
    'show': boolean;
  }
  interface GxcfFlow {
    'flow': FlowElement;
    'showDropZone': boolean;
  }
  interface GxcfFlowfull {
    'flow': FlowElement;
  }
  interface GxcfFlowsummary {
    'flow': FlowElement;
  }
  interface GxcfHint {
    'hintDescription': string;
    'hintId': string;
  }
  interface GxcfPluselement {}
  interface GxcfSelect {
    'selectcaption': string;
    'selectid': string;
  }
  interface GxcfSummarydescription {
    'descriptionid': string;
    'descriptionvalue': string;
  }
  interface GxcfSummarytitle {
    'summaryid': string;
    'summaryvalue': string;
  }
  interface GxcfUparrow {
    'arrowid': string;
  }
  interface GxcfWelcome {}
}

declare global {


  interface HTMLGxcfCollectionElement extends Components.GxcfCollection, HTMLStencilElement {}
  const HTMLGxcfCollectionElement: {
    prototype: HTMLGxcfCollectionElement;
    new (): HTMLGxcfCollectionElement;
  };

  interface HTMLGxcfConversationaldesignerElement extends Components.GxcfConversationaldesigner, HTMLStencilElement {}
  const HTMLGxcfConversationaldesignerElement: {
    prototype: HTMLGxcfConversationaldesignerElement;
    new (): HTMLGxcfConversationaldesignerElement;
  };

  interface HTMLGxcfDownarrowElement extends Components.GxcfDownarrow, HTMLStencilElement {}
  const HTMLGxcfDownarrowElement: {
    prototype: HTMLGxcfDownarrowElement;
    new (): HTMLGxcfDownarrowElement;
  };

  interface HTMLGxcfDropzoneElement extends Components.GxcfDropzone, HTMLStencilElement {}
  const HTMLGxcfDropzoneElement: {
    prototype: HTMLGxcfDropzoneElement;
    new (): HTMLGxcfDropzoneElement;
  };

  interface HTMLGxcfFlowElement extends Components.GxcfFlow, HTMLStencilElement {}
  const HTMLGxcfFlowElement: {
    prototype: HTMLGxcfFlowElement;
    new (): HTMLGxcfFlowElement;
  };

  interface HTMLGxcfFlowfullElement extends Components.GxcfFlowfull, HTMLStencilElement {}
  const HTMLGxcfFlowfullElement: {
    prototype: HTMLGxcfFlowfullElement;
    new (): HTMLGxcfFlowfullElement;
  };

  interface HTMLGxcfFlowsummaryElement extends Components.GxcfFlowsummary, HTMLStencilElement {}
  const HTMLGxcfFlowsummaryElement: {
    prototype: HTMLGxcfFlowsummaryElement;
    new (): HTMLGxcfFlowsummaryElement;
  };

  interface HTMLGxcfHintElement extends Components.GxcfHint, HTMLStencilElement {}
  const HTMLGxcfHintElement: {
    prototype: HTMLGxcfHintElement;
    new (): HTMLGxcfHintElement;
  };

  interface HTMLGxcfPluselementElement extends Components.GxcfPluselement, HTMLStencilElement {}
  const HTMLGxcfPluselementElement: {
    prototype: HTMLGxcfPluselementElement;
    new (): HTMLGxcfPluselementElement;
  };

  interface HTMLGxcfSelectElement extends Components.GxcfSelect, HTMLStencilElement {}
  const HTMLGxcfSelectElement: {
    prototype: HTMLGxcfSelectElement;
    new (): HTMLGxcfSelectElement;
  };

  interface HTMLGxcfSummarydescriptionElement extends Components.GxcfSummarydescription, HTMLStencilElement {}
  const HTMLGxcfSummarydescriptionElement: {
    prototype: HTMLGxcfSummarydescriptionElement;
    new (): HTMLGxcfSummarydescriptionElement;
  };

  interface HTMLGxcfSummarytitleElement extends Components.GxcfSummarytitle, HTMLStencilElement {}
  const HTMLGxcfSummarytitleElement: {
    prototype: HTMLGxcfSummarytitleElement;
    new (): HTMLGxcfSummarytitleElement;
  };

  interface HTMLGxcfUparrowElement extends Components.GxcfUparrow, HTMLStencilElement {}
  const HTMLGxcfUparrowElement: {
    prototype: HTMLGxcfUparrowElement;
    new (): HTMLGxcfUparrowElement;
  };

  interface HTMLGxcfWelcomeElement extends Components.GxcfWelcome, HTMLStencilElement {}
  const HTMLGxcfWelcomeElement: {
    prototype: HTMLGxcfWelcomeElement;
    new (): HTMLGxcfWelcomeElement;
  };
  interface HTMLElementTagNameMap {
    'gxcf-collection': HTMLGxcfCollectionElement;
    'gxcf-conversationaldesigner': HTMLGxcfConversationaldesignerElement;
    'gxcf-downarrow': HTMLGxcfDownarrowElement;
    'gxcf-dropzone': HTMLGxcfDropzoneElement;
    'gxcf-flow': HTMLGxcfFlowElement;
    'gxcf-flowfull': HTMLGxcfFlowfullElement;
    'gxcf-flowsummary': HTMLGxcfFlowsummaryElement;
    'gxcf-hint': HTMLGxcfHintElement;
    'gxcf-pluselement': HTMLGxcfPluselementElement;
    'gxcf-select': HTMLGxcfSelectElement;
    'gxcf-summarydescription': HTMLGxcfSummarydescriptionElement;
    'gxcf-summarytitle': HTMLGxcfSummarytitleElement;
    'gxcf-uparrow': HTMLGxcfUparrowElement;
    'gxcf-welcome': HTMLGxcfWelcomeElement;
  }
}

declare namespace LocalJSX {
  interface GxcfCollection {
    'collection'?: string[];
    'collectionHeader'?: string;
    'collectionHintDescription'?: string;
    'collectionHintId'?: string;
    'currentItemIndex'?: number;
    'currentItemValue'?: string;
    'onAddItem'?: (event: CustomEvent<any>) => void;
    'onDeleteItem'?: (event: CustomEvent<any>) => void;
    'onEditItem'?: (event: CustomEvent<any>) => void;
  }
  interface GxcfConversationaldesigner {}
  interface GxcfDownarrow {
    'arrowid'?: string;
  }
  interface GxcfDropzone {
    'moveType'?: string;
    'objectReferenceId'?: string;
    'onDropOnDropZone'?: (event: CustomEvent<any>) => void;
    'onOnDragLeaveDropZone'?: (event: CustomEvent<any>) => void;
    'onOnDragOverDropZone'?: (event: CustomEvent<any>) => void;
    'show'?: boolean;
  }
  interface GxcfFlow {
    'flow'?: FlowElement;
    'showDropZone'?: boolean;
  }
  interface GxcfFlowfull {
    'flow'?: FlowElement;
    'onOnCollapseFlow'?: (event: CustomEvent<any>) => void;
  }
  interface GxcfFlowsummary {
    'flow'?: FlowElement;
    'onOnDragOverFlow'?: (event: CustomEvent<any>) => void;
    'onOnExpandFlow'?: (event: CustomEvent<any>) => void;
    'onOnFlowDragStart'?: (event: CustomEvent<any>) => void;
    'onSelectConversationalObject'?: (event: CustomEvent<any>) => void;
  }
  interface GxcfHint {
    'hintDescription'?: string;
    'hintId'?: string;
    'onHideHint'?: (event: CustomEvent<any>) => void;
    'onShowHint'?: (event: CustomEvent<any>) => void;
  }
  interface GxcfPluselement {}
  interface GxcfSelect {
    'selectcaption'?: string;
    'selectid'?: string;
  }
  interface GxcfSummarydescription {
    'descriptionid'?: string;
    'descriptionvalue'?: string;
    'onChangingFlowTriggerSummary'?: (event: CustomEvent<any>) => void;
  }
  interface GxcfSummarytitle {
    'onChangingFlowName'?: (event: CustomEvent<any>) => void;
    'summaryid'?: string;
    'summaryvalue'?: string;
  }
  interface GxcfUparrow {
    'arrowid'?: string;
  }
  interface GxcfWelcome {
    'onOpenEditor'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'gxcf-collection': GxcfCollection;
    'gxcf-conversationaldesigner': GxcfConversationaldesigner;
    'gxcf-downarrow': GxcfDownarrow;
    'gxcf-dropzone': GxcfDropzone;
    'gxcf-flow': GxcfFlow;
    'gxcf-flowfull': GxcfFlowfull;
    'gxcf-flowsummary': GxcfFlowsummary;
    'gxcf-hint': GxcfHint;
    'gxcf-pluselement': GxcfPluselement;
    'gxcf-select': GxcfSelect;
    'gxcf-summarydescription': GxcfSummarydescription;
    'gxcf-summarytitle': GxcfSummarytitle;
    'gxcf-uparrow': GxcfUparrow;
    'gxcf-welcome': GxcfWelcome;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'gxcf-collection': LocalJSX.GxcfCollection & JSXBase.HTMLAttributes<HTMLGxcfCollectionElement>;
      'gxcf-conversationaldesigner': LocalJSX.GxcfConversationaldesigner & JSXBase.HTMLAttributes<HTMLGxcfConversationaldesignerElement>;
      'gxcf-downarrow': LocalJSX.GxcfDownarrow & JSXBase.HTMLAttributes<HTMLGxcfDownarrowElement>;
      'gxcf-dropzone': LocalJSX.GxcfDropzone & JSXBase.HTMLAttributes<HTMLGxcfDropzoneElement>;
      'gxcf-flow': LocalJSX.GxcfFlow & JSXBase.HTMLAttributes<HTMLGxcfFlowElement>;
      'gxcf-flowfull': LocalJSX.GxcfFlowfull & JSXBase.HTMLAttributes<HTMLGxcfFlowfullElement>;
      'gxcf-flowsummary': LocalJSX.GxcfFlowsummary & JSXBase.HTMLAttributes<HTMLGxcfFlowsummaryElement>;
      'gxcf-hint': LocalJSX.GxcfHint & JSXBase.HTMLAttributes<HTMLGxcfHintElement>;
      'gxcf-pluselement': LocalJSX.GxcfPluselement & JSXBase.HTMLAttributes<HTMLGxcfPluselementElement>;
      'gxcf-select': LocalJSX.GxcfSelect & JSXBase.HTMLAttributes<HTMLGxcfSelectElement>;
      'gxcf-summarydescription': LocalJSX.GxcfSummarydescription & JSXBase.HTMLAttributes<HTMLGxcfSummarydescriptionElement>;
      'gxcf-summarytitle': LocalJSX.GxcfSummarytitle & JSXBase.HTMLAttributes<HTMLGxcfSummarytitleElement>;
      'gxcf-uparrow': LocalJSX.GxcfUparrow & JSXBase.HTMLAttributes<HTMLGxcfUparrowElement>;
      'gxcf-welcome': LocalJSX.GxcfWelcome & JSXBase.HTMLAttributes<HTMLGxcfWelcomeElement>;
    }
  }
}


